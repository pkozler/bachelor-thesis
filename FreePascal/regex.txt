/**
(**

/*
(*

 */
 *)

*/
*)

{
begin

}
end;

\[TestMethod\](\s*)public void (.+)\(\)
procedure $2$3;

begin$mode objfpcend;begin$H+end;
{$mode objfpc}{$H+}

^        

Assert.AreEqual
AssertEquals

procedure .+\.TestHookUp;\s*begin\s*.*\s*end;\s*(\n|\r\n)?

=([^=])
:=$1

:= class\(TTestCase\)
 = class(TTestCase)

/// <summary>
(**

/// </summary>
 *)

/// 
 * 

 \S+Test\.(\S+Test[0-9]*)\(\);
 procedure $1;

 procedure (\S+Test[0-9]*);\s*begin
 procedure Test.$1;\nvar\nbegin

var\s*begin((\s*\S+(\s+\S+(,\s+\S+)*);)*)
var$1\nbegin

^    ([^\s=();]+) +([^=();]+);$
    $2: $1;

^    ([^\s=();]+): return;$
    return $1;

new ([a-zA-Z0-9_]+)\(
$1.create(

\(([a-zA-Z0-9_]+)\) ?([a-zA-Z0-9_\.\-]+)
$1($2)

([a-zA-Z0-9_]+)\s*\[\]
array of $1

begin(.*)end;
{$1}

{(.*), ?(.+)}
{$1};\n    a[] := $2

{(\s*\S+\s*)}
;\n    a[] := $1

\{\$mode objfpc\};\s*a\[\] := \$H\+
{\$mode objfpc}{\$H+}

[a-zA-Z0-9_]+\s*:=\s*new array of [a-zA-Z0-9_]+\s*;
setLength($1, );

((?![a-zA-Z0-9]+\[\] := )\s*)([a-zA-Z0-9]+)\[\] :=
$1$3[0] :=

TestObject\.create\(('.*')\s*;\s*[a-zA-Z0-9]+\[\] := ([0-9]+)\).*;
TestObject.create($1, $2);

(setLength\([a-zA-Z0-9]+, \)\s*;\s*|new array of [a-zA-Z0-9_]+\s*;\s*)([a-zA-Z0-9]+)\[\] :=
$1$2[0] :=

([a-zA-Z0-9]+\[0\] := .+;\s*[a-zA-Z0-9]+\[)
${1}1

([a-zA-Z0-9]+ := Arrays\.equals\([a-zA-Z0-9]+, new array of [a-zA-Z0-9_]+\s*;)((\s*([a-zA-Z0-9]+)\[[0-9]+\] := .+;)+)
setLength($4, );$2\n\t$1

([a-zA-Z0-9]+ := [a-zA-Z0-9]+\.equals\(toList\(new array of [a-zA-Z0-9_]+\s*;)((\s*([a-zA-Z0-9]+)\[[0-9]+\] := .+;)+)
setLength($4, );$2\n\t$1