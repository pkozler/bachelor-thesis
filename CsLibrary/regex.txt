@return (([^@/]*(\n)?)+)
<returns>$1 </returns>\n\t\t *

@param ([a-zA-Z0-9_]+) (([^@/<]*(\n)?)+)
<param name="$1">$2</param>

\*</param>/
* </param>\n\t\t */

/\*\*
/**<summary>

^(\s*\*)(\s*)$
$1 </summary>

(/\*\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*)\*/
$1**/

^(\s*)(/\*\*| \*\*/| \*[^/])
$1/// 

^\s*///\s*\n




TestObject \[str=([a-zA-Z0-9]*), i=([0-9]+)\]
new TestObject("$1", $2)

"\[(.*)\]"
new TestObject[] {$1}

(new TestObject\[\] \{.*\})
toList($1)

String ([a-z]);
bool $1;

(?<BOOLEAN>[a-z]) = (?<OBJECT>[a-z]).toString\(\);(?<ASSERT>\s*(\n|\r\n)\s*Assert.Equals\()(?<NEWOBJECT>new TestObject\(.*\))(?<END>, [a-z]\);)
${BOOLEAN} = ${OBJECT}.equals(${NEWOBJECT});${ASSERT}true${END}

(?<BOOLEAN>[a-z]) = Arrays.toString\((?<ARRAY>[a-z])\);(?<ASSERT>\s*(\n|\r\n)\s*Assert.Equals\()(?<NEWARRAY>new [a-zA-Z]+\[\] \{.*\})(?<END>, [a-z]\);)
${BOOLEAN} = Arrays.equals(${ARRAY}, ${NEWARRAY});${ASSERT}true${END}

"\[((.*), )*(.*)?\]"
new String[] {$1}

([a-zA-Z.]+), 
"$1", 

(\n|\r\n)namespace CsLibraryTest\s*(\n|\r\n)\s*\{((.|\n|\r\n)*)\}

setInput\(.*\);(\n|\r\n)

a.useLocale\(.*\);(\n|\r\n)

next(.*)Test\n(.*)
b = a.next$1();\nAssert.Equals($2, b);

[a-z] = (?<SCANNER>[a-z])\.(?<METHOD>next.*)\(\);\s*(\n|\r\n)\s*Assert\.Equals\((?<EXPECTED>.*), [a-z]\);
${METHOD}AssertEquals(${SCANNER}, ${EXPECTED});

\[TestMethod\]\s*(\n|\r\n)\s*

"TestObject\[str = ?(.*), i = (.*)\]"
"TestObject [str=$1, i=$2]"